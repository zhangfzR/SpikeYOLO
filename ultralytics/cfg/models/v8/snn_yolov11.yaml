# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=snn_yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.375, 1024]  # SpikeYOLOn 13.2M 
  s: [0.33, 0.5, 1024]  # SpikeYOLOs 23.1M
  m: [0.5, 0.625, 7024]   # SpikeYOLOm 48.1M 
  l: [0.5, 0.75, 1024]   # SpikeYOLO8l 68.8M


# #0.623
backbone:
  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,640,640]->[1,1,3,640,640]
  -  [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]]     #1 [1,1,3,640,640]->[1,1,64,160,160]
  -  [-1, 3, MS_AllConvBlock, [4,7]]                        #2 [1,1,64,160,160]->[1,1,64,160,160]
  -  [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,64,160,160]->[1,1,128,80,80]
  -  [-1, 6, MS_AllConvBlock, [4,7]]                        #4 [1,1,128,80,80]->[1,1,128,80,80]
  -  [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,128,80,80]->[1,1,256,40,40]
  -  [-1, 9, MS_ConvBlock, [3,7]]                         #6 [1,1,256,40,40]->[1,1,256,40,40]
  -  [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,256,40,40]->[1,1,512,20,20]
  -  [-1, 3, MS_ConvBlock, [2,7]]                         #8 [1,1,512,20,20]->[1,1,512,20,20]
  -  [-1, 1, SpikeSPPF, [1024, 5]]                        #9 [1,512,20,20]->[1,512,20,20]
  -  [-1, 2, C2PSA, [1024]]                               #10

head:
  - [-1, 1, MS_StandardConv, [512,1,1]]                   #11 [1,1,512,20,20]->[1,1,256,20,20]  #
  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #12 [1,1,256,20,20]->[1,1,256,40,40]
  -  [ -1, 1, MS_ConvBlock, [3,7]]                          #13 [1,1,256,40,40]->[1,1,256,40,40]
  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #14 [1,1,256,40,40]+[1,1,256,40,40] == [1,1,512,40,40]  #二者均受wider系数操控
  
  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #15 [1,1,512,40,40]->[1,1,128,40,40]
  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #16 [1,1,128,40,40]->[1,1,128,80,80]
  -  [-1, 1, MS_AllConvBlock, [4,7]]                   #17 [1,1,128,40,40]->[1,1,128,40,40]
  
  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #18 [1,1,128,80,80]+[1,1,128,80,80] == [1,1,256,80,80]
  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #19 [1,1,256,80,80]->[1,1,128,80,80]
  -  [-1, 1, MS_AllConvBlock, [4,7]]                           #20 [1,1,128,80,80]->[1,1,128,80,80]   输出层
  
  -  [-1, 1, MS_StandardConv, [256,3,2]]                  #21 [1,1,128,80,80]->[1,1,128,40,40]
  -  [[-1, 15], 1, Concat, [2]]  # cat head P4            #22  [1,1,128,40,40]+[1,1,128,40,40] == [1,1,256,40,40]
  -  [-1, 1, MS_ConvBlock, [3,7]]                           #23 [1,1,256,40,40]->[1,1,256,40,40]     输出层

  -  [-1, 1, MS_StandardConv, [512,3,2]]                  #24 [1,1,256,40,40]->[1,1,256,20,20]
  -  [[-1, 11], 1, Concat, [2]]  # cat head P5             #25 [1,1,256,20,20]+[1,1,256,20,20] == [1,1,512,20,20]
  -  [-1, 1, MS_ConvBlock, [1,7]]   # 23 (P5/32-large)      #26 [1,1,512,20,20]->[1,1,512,20,20]  输出层             #C3层实际输出通道数为args[0]*缩放系数

  -  [[20, 23, 26], 1, SpikeDetect, [nc]]             #27 [1,1,128,80,80] and [1,1,256,40,40] and [1,1,512,20,20]->
                                                    #[1,3,80,80,144] and [1,3,40,40,144] and [1,3,20,20,144]   # Detect(P3, P4, P5)
